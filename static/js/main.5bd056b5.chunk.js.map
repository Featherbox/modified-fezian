{"version":3,"sources":["Character.js","Word.js","App.js","serviceWorker.js","index.js"],"names":["letters","a","b","c","d","e","f","g","h","i","j","k","q","l","m","n","o","p","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","Character","shape","Object","keys","includes","this","props","letter","toLowerCase","tl","tr","bl","br","class","React","Component","defaultProps","Word","chars","text","length","push","classes","black","words","App","lines","substr","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bd056b5.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './App.css';\r\n\r\nconst letters = {\r\n  a: ['top right','top','bottom left','bottom right'],\r\n  b: ['left top','top right','bottom','right bottom'],\r\n  c: ['left top','top','left bottom','bottom'],\r\n  d: ['bottom','bottom right','','right'],\r\n  e: ['top','top bottom','left bottom','bottom'],\r\n  f: ['top right','top right','bottom right','bottom right'],\r\n\r\n  g: ['left','right top','left top','right bottom'],\r\n  h: ['left top','top right','bottom left','right'],\r\n  i: ['left','right','bottom left','bottom right'],\r\n  j: ['right top','top','right',''],\r\n  k: ['left right','right','left','bottom right'],\r\n  q: ['left right','right','left','bottom right'],\r\n  l: ['left top','right top','left top','right top'],\r\n\r\n  m: ['top left','top right','bottom','bottom left'],\r\n  n: ['left top','top','bottom left','right bottom'],\r\n  o: ['top','right top','bottom','right bottom'],\r\n  p: ['left','','top left','top'],\r\n  r: ['top left','top left','bottom left','bottom left'],\r\n\r\n  s: ['left top','right bottom','left bottom','right'],\r\n  t: ['left','top right','bottom left','right bottom'],\r\n  u: ['top left','top right','left','right'],\r\n\r\n  v: ['left top','top right','bottom','right bottom'],\r\n\r\n  w: ['','left','bottom','left bottom'],\r\n  x: ['top left','right','left','right left'],\r\n  y: ['left bottom','right bottom','left bottom','right bottom'],\r\n\r\n  z: ['top','right top','bottom top','bottom'],\r\n\r\n  0: ['top left','top right','bottom left','bottom right'],\r\n  1: ['top left right','top right','bottom left','bottom right'],\r\n  2: ['top left','top right','bottom left','top bottom right'],\r\n  3: ['top left','top right','bottom left','bottom right left'],\r\n  4: ['top bottom left','top right','bottom left','bottom right'],\r\n  5: ['top left right','top right','top bottom left','bottom right'],\r\n  6: ['top left','top right','top bottom left','top bottom right'],\r\n  7: ['top left','top right','top bottom right left','bottom right'],\r\n  8: ['top right left','top right','top bottom right left','bottom right'],\r\n  9: ['top left','top right','top bottom right left','top bottom right'],\r\n  \"\\\\\": ['top right left','top right','top bottom right left','top bottom right'],\r\n  \".\": ['','','top','top'],\r\n  \"?\": ['right','','right',''],\r\n  \",\": ['','','top',''],\r\n  \":\": ['top','top','top','top'],\r\n  ';': ['top','top','top','']\r\n}\r\n\r\nclass Character extends React.Component {\r\n\r\n  render() {\r\n\r\n    let shape = ['','','','']\r\n\r\n    if (Object.keys(letters).includes(this.props.letter.toLowerCase())) {\r\n      shape = letters[this.props.letter.toLowerCase()]\r\n    }\r\n\r\n    let tl = shape[0]\r\n    let tr = shape[1]\r\n\r\n    let bl = shape[2]\r\n    let br = shape[3]\r\n\r\n    tl += \" character-cell\";\r\n    tr += \" character-cell\";\r\n    bl += \" character-cell\";\r\n    br += \" character-cell\";\r\n\r\n    return (<div class=\"character-wrapper\">\r\n      <div class={tl} /><div class={bl} /><br /><div class={tr} /><div class={br} />\r\n    </div>)\r\n\r\n  }\r\n\r\n}\r\n\r\nCharacter.defaultProps = {\r\n  \"letter\": \"\"\r\n}\r\n\r\nexport default Character","import React from \"react\"\r\nimport './App.css';\r\n\r\nimport Character from \"./Character.js\"\r\n\r\nclass Word extends React.Component {\r\n\r\n  render() {\r\n\r\n    let chars = []\r\n\r\n    for (let i = 0; i < this.props.text.length; i++) {\r\n\r\n      chars.push(<Character letter={this.props.text[i]} />)\r\n\r\n    }\r\n\r\n    let classes =\"word-wrapper\"\r\n\r\n    if (this.props.black) classes = \"black word-wrapper\"\r\n\r\n    return <div class={classes}>\r\n      {chars}\r\n    </div>\r\n\r\n  }\r\n\r\n}\r\n\r\nCharacter.defaultProps = {\r\n  \"text\": \"\",\r\n  \"black\": false\r\n}\r\n\r\nexport default Word","import React, { Component } from 'react';\nimport './App.css';\n\nimport Word from './Word.js'\n\nconst words = [\n  \"I have played by the rules for so long.\",\n\n  \"::Not from where I am sitting.\",\n\n  \"No, not your rules.\",\n  \"You work at the behest of a system so broken you didn't even notice when it became corrupted at it's very core.\",\n  \"When I first broke your rules, a sitting president had authorized assassination squads in Laos and the head of the FBI had ordered his men to conduct illegal surveillance on his rivals.\",\n  \"Your rules have changed every time that it was convenient for you.\",\n  \"I was talking about my rules.\",\n  \"I have lived by those rules for so long,\",\n  \"believed in them for so long,\",\n  \"believed that if you played by the right rules, eventually you would win.\",\n  \"But I was wrong, wasn't I?\",\n  \"And now all the people I cared about are dead.\",\n  \"Or will be dead,\",\n  \"soon enough.\",\n  \"And we will be gone without a trace.\",\n  \"So now i have to decide.\",\n  \"Decide whether to let my friends die; to let hope die.\",\n  \"To let the world be ground under your heel, all because I played by my rules.\",\n  \"I'm trying to decide.\",\n  \"I'm going to kill you.\",\n  \"But i need to decide how far I'm willing to go;\",\n  \"How many of my own rules I'm willing to break,\",\n  \"to get it done.\",\n\n  \"::Look, you want to add threatening the life of a federal agent to your file, I will draw those charges right now.\",\n  \"::No waiting is required.\",\n\n  \"I wasn't talking to you.\",\n\n  \"::...\",\n  \"::This guy is ours, I don't care who those suits think they are.\",\n  \"::Get him back to holding.\",\n\n  \"...\",\n  \"Numbers in modified fezian are kind of weird, so I'll include some of those: 1\\\\\\\\\\\\9\\\\\\\\8\\\\4, 2\\\\7, \\\\3\"\n]\n\nclass App extends Component {\n    render() {\n\n    let lines = []\n\n    for (let i = 0; i < words.length; i++) {\n      if (words[i].substr(0,2) === \"::\") {\n          \n          lines.push(<Word black text={words[i].substr(2)} />)\n\n      } else {\n          \n          lines.push(<Word text={words[i]} />)\n\n      }\n    }\n    \n    return (\n      <div class=\"horizontal\">\n        {lines}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}